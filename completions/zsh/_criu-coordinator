#compdef criu-coordinator

autoload -U is-at-least

_criu-coordinator() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_criu-coordinator_commands" \
"*::: :->criu-coordinator" \
&& ret=0
    case $state in
    (criu-coordinator)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:criu-coordinator-command-$line[1]:"
        case $line[1] in
            (client)
_arguments "${_arguments_options[@]}" : \
'--address=[Address to connect the client to]:ADDRESS:_default' \
'--port=[Port to connect the client to]:PORT:_default' \
'-i+[Unique client ID]:ID:_default' \
'--id=[Unique client ID]:ID:_default' \
'-d+[A colon-separated list of dependency IDs]:DEPS:_default' \
'--deps=[A colon-separated list of dependency IDs]:DEPS:_default' \
'-a+[Action name indicating the stage of checkpoint/restore]:ACTION:_default' \
'--action=[Action name indicating the stage of checkpoint/restore]:ACTION:_default' \
'-D+[Images directory where the stream socket is created]:IMAGES_DIR:_default' \
'--images-dir=[Images directory where the stream socket is created]:IMAGES_DIR:_default' \
'-o+[Log file name]:LOG_FILE:_default' \
'--log-file=[Log file name]:LOG_FILE:_default' \
'-s[Use checkpoint streaming]' \
'--stream[Use checkpoint streaming]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(server)
_arguments "${_arguments_options[@]}" : \
'-a+[Address to bind the server to]:ADDRESS:_default' \
'--address=[Address to bind the server to]:ADDRESS:_default' \
'-p+[Port to bind the server to]:PORT:_default' \
'--port=[Port to bind the server to]:PORT:_default' \
'-o+[Log file name]:LOG_FILE:_default' \
'--log-file=[Log file name]:LOG_FILE:_default' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(completions)
_arguments "${_arguments_options[@]}" : \
'-h[Print help]' \
'--help[Print help]' \
':shell -- Shell type (e.g., bash, zsh, fish, powershell, elvish):_default' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_criu-coordinator__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:criu-coordinator-help-command-$line[1]:"
        case $line[1] in
            (client)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(server)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(completions)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
}

(( $+functions[_criu-coordinator_commands] )) ||
_criu-coordinator_commands() {
    local commands; commands=(
'client:Run as client' \
'server:Run as server' \
'completions:Generate shell completions' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'criu-coordinator commands' commands "$@"
}
(( $+functions[_criu-coordinator__client_commands] )) ||
_criu-coordinator__client_commands() {
    local commands; commands=()
    _describe -t commands 'criu-coordinator client commands' commands "$@"
}
(( $+functions[_criu-coordinator__completions_commands] )) ||
_criu-coordinator__completions_commands() {
    local commands; commands=()
    _describe -t commands 'criu-coordinator completions commands' commands "$@"
}
(( $+functions[_criu-coordinator__help_commands] )) ||
_criu-coordinator__help_commands() {
    local commands; commands=(
'client:Run as client' \
'server:Run as server' \
'completions:Generate shell completions' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'criu-coordinator help commands' commands "$@"
}
(( $+functions[_criu-coordinator__help__client_commands] )) ||
_criu-coordinator__help__client_commands() {
    local commands; commands=()
    _describe -t commands 'criu-coordinator help client commands' commands "$@"
}
(( $+functions[_criu-coordinator__help__completions_commands] )) ||
_criu-coordinator__help__completions_commands() {
    local commands; commands=()
    _describe -t commands 'criu-coordinator help completions commands' commands "$@"
}
(( $+functions[_criu-coordinator__help__help_commands] )) ||
_criu-coordinator__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'criu-coordinator help help commands' commands "$@"
}
(( $+functions[_criu-coordinator__help__server_commands] )) ||
_criu-coordinator__help__server_commands() {
    local commands; commands=()
    _describe -t commands 'criu-coordinator help server commands' commands "$@"
}
(( $+functions[_criu-coordinator__server_commands] )) ||
_criu-coordinator__server_commands() {
    local commands; commands=()
    _describe -t commands 'criu-coordinator server commands' commands "$@"
}

if [ "$funcstack[1]" = "_criu-coordinator" ]; then
    _criu-coordinator "$@"
else
    compdef _criu-coordinator criu-coordinator
fi
